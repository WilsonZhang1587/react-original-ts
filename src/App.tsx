import ReactECharts from 'echarts-for-react';
import { useQueries } from 'react-query'
import './App.css';

function App() {
  interface ToolTip {
    marker: string,
    data: number[],
  }

  const xAxisLabels = [
    '台北市', '新北市', '桃園市', '宜蘭市', '高雄市',
    '台北市', '新北市', '桃園市', '宜蘭市', '高雄市',
    '台北市', '新北市', '桃園市', '宜蘭市', '高雄市',
    '台北市', '新北市', '桃園市', '宜蘭市', '高雄市',
    '台北市', '新北市', '桃園市', '宜蘭市', '高雄市',
    '台北市', '新北市', '桃園市', '宜蘭市', '高雄市',
    '台北市', '新北市', '桃園市', '宜蘭市', '高雄市',
    '台北市', '新北市', '桃園市', '宜蘭市', '高雄市'
  ]
  const xAxis2Labels = ['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018']
  const getOption = () => {
    return {
      dataset: [
        {
          source: [
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [200, 300, 500, 600, 2000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000],
            [100, 250, 400, 500, 200, 300, 752, 251, 1242, 1256, 1734, 3000]
          ]
        },
        {
          source: [
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458],
            [123, 311, 435, 586, 458]
          ]
        },
        {
          source: [
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238],
            [789, 576, 953, 809, 238]
          ]
        },
        {
          source: [
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678],
            [100, 234, 456, 780, 235, 678]
          ]
        },
        {
          fromDatasetIndex: 0,
          transform: { type: 'boxplot' }
        },
        {
          fromDatasetIndex: 1,
          transform: { type: 'boxplot' }
        },
        {
          fromDatasetIndex: 2,
          transform: { type: 'boxplot' }
        },
        {
          fromDatasetIndex: 3,
          transform: { type: 'boxplot' }
        }
      ],
      legend: {
        data: ['住宅大樓', '公寓', '華夏', '透天厝']
      },
      tooltip: {
        trigger: 'item',
        axisPointer: {
          type: 'shadow'
        },
        formatter: function (params: ToolTip) {
          const newLabels = xAxisLabels.map((item, index) => xAxis2Labels[(Math.trunc(index / 5))])

          return `
            <div>
              ${params.marker} ${newLabels[params.data[0]]}-${xAxisLabels[params.data[0]]}
              <br />
              Lower: ${params.data[1]}
              <br />
              Q1: ${params.data[2]}
              <br />
              Median: ${params.data[3]}
              <br />
              Q3: ${params.data[4]}
              <br />
              Upper: ${params.data[5]}
            </div>
          `
        }
      },
      grid: {
        left: '4%',
        right: '4%',
        bottom: '20%'
      },
      xAxis: [
        {
          type: 'category',
          axisLabel: {
            interval: 0,
            rotate: 0,
            fontSize: 10,
            formatter: function (params: number) {
              return xAxisLabels[params]
            }
          },
          boundaryGap: true,
          min: 0,
          max: xAxisLabels.length - 1
        },
        {
          type: 'category',
          data: xAxis2Labels,
          position: 'bottom',
          offset: 25,
          axisLine: {
            show: false
          },
          axisTick: {
            show: true,
            length: 20
          }
        }
      ],
      yAxis: {
        type: 'value',
        splitLine: {
          lineStyle: {
            color: '#000',
            opacity: 0.2
          }
        }
      },
      // dataZoom: [
      //   {
      //     type: 'inside',
      //     start: 0,
      //     end: 100
      //   },
      //   {
      //     show: true,
      //     type: 'slider',
      //     top: '90%',
      //     xAxisIndex: [1],
      //     start: 0,
      //     end: 100
      //   }
      // ],
      series: [
        {
          name: '住宅大樓',
          type: 'boxplot',
          datasetIndex: 4,
          itemStyle: {
            borderColor: '#fac858'
          }
        },
        {
          name: '公寓',
          type: 'boxplot',
          datasetIndex: 5,
          itemStyle: {
            borderColor: '#91cc75'
          }
        },
        {
          name: '華夏',
          type: 'boxplot',
          datasetIndex: 6,
          itemStyle: {
            borderColor: '#ee6666'
          }
        },
        {
          name: '透天厝',
          type: 'boxplot',
          datasetIndex: 7,
          itemStyle: {
            borderColor: '#5470c6'
          }
        },
        // {
        //   name: 'outlier',
        //   type: 'scatter',
        //   datasetIndex: 2
        // }
      ]
    };
  }

  return (
    <div className="App">
      <ReactECharts
        option={getOption()}
        notMerge={true}
        lazyUpdate={true}
        theme={"theme_name"}
        style={{ height: '500px' }}
      />
    </div>
  );
}

export default App;
